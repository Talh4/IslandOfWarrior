using System.Collections;
using System.Collections.Generic;
using UnityEngine.Assertions;
using UnityEngine.UI;
using UnityEngine;

public class PlayerHealth : MonoBehaviour {

    public EnemyHealth enemyHealth;

    [SerializeField]
    private int startingHealth = 100;

    [SerializeField]
    private float timeSinceLastHit = 2f;

    [SerializeField]
    private Slider healthSlider;

    private float timer = 0f;
    private CharacterController characterController;
    private Animator anim;
    private AudioSource audioSource;
    private int currentHealth;
    private ParticleSystem blood;

    public int CurrentHealth {

        get {

            return currentHealth;

        }

        set {

            if (value < 0)
            {

                currentHealth = 0;

            }
            else {

                currentHealth = value;

            }

        }

    }

    private void Awake()
    {

        Assert.IsNotNull(healthSlider);

    }

    // Use this for initialization
    void Start () {

        blood = GetComponentInChildren<ParticleSystem>();
        audioSource = GetComponent<AudioSource>();
        anim = GetComponent<Animator>();
        characterController = GetComponent<CharacterController>();
        currentHealth = startingHealth;
        StartCoroutine(RegenerateHealth());

	}

    IEnumerator RegenerateHealth()
    {
        while (true)
        {
            currentHealth = Mathf.Clamp(currentHealth + 1, -100, 100);
            healthSlider.value = currentHealth;
            yield return new WaitForSeconds(1);
        }
    }

    // Update is called once per frame
    void Update () {

        timer += Time.deltaTime;
        Debug.Log(currentHealth);

	}

    private void OnTriggerEnter(Collider other) {

        if (timer >= timeSinceLastHit && !GameManager.instance.GameOver) {

            if (other.tag == "weapon") {

                currentHealth -= 10;
                healthSlider.value = currentHealth;
                blood.Play();
                TakeHit();
                timer = 0;

            }

        }

    }

    void TakeHit() {

        if (currentHealth > 0)
        {

            GameManager.instance.PlayerHit(currentHealth);
            anim.Play("hurt");
           // currentHealth -= 10;
            audioSource.PlayOneShot(audioSource.clip);

        }
        else if (currentHealth <= 0) {

            KillPlayer();

        }

    }

    void KillPlayer() {

        GameManager.instance.PlayerHit(currentHealth);
        anim.SetTrigger("die");
        characterController.enabled = false;
        audioSource.PlayOneShot(audioSource.clip);
        blood.Play();

    }

    public void PowerUpHealth() {

        if (currentHealth <= 80)
        {

            CurrentHealth += 20;

        }
        else if (currentHealth < startingHealth) {

            CurrentHealth = startingHealth;

        }

        healthSlider.value = currentHealth;

    }

}
